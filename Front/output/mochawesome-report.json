{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-22T04:48:13.021Z",
    "end": "2024-02-22T04:48:24.291Z",
    "duration": 11270,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8a25ff4e-b046-4845-acef-fb006f188626",
      "title": "",
      "fullFile": "C:\\Users\\benja\\Desktop\\Ingefinal3\\Front\\testvisual_test.js",
      "file": "\\testvisual_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
          "title": "Prueba",
          "fullFile": "C:\\Users\\benja\\Desktop\\Ingefinal3\\Front\\testvisual_test.js",
          "file": "\\testvisual_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"Prueba\"",
              "fullTitle": "Prueba \"before all\" hook: codeceptjs.beforeSuite in \"Prueba\"",
              "timedOut": false,
              "duration": 638,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "71da57dd-a5f1-44c4-a3f9-e3207210df1c",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"Prueba\"",
              "fullTitle": "Prueba \"before each\" hook: codeceptjs.before in \"Prueba\"",
              "timedOut": false,
              "duration": 144,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "d1776171-61f2-4c9b-a4a8-4af7b4398455",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"Prueba\"",
              "fullTitle": "Prueba \"after all\" hook: codeceptjs.afterSuite in \"Prueba\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "320609bb-50f2-41a0-a32c-eadfe7319062",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"Prueba\"",
              "fullTitle": "Prueba \"after each\" hook: finalize codeceptjs in \"Prueba\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "79e56097-5d28-4b91-bbf3-e101f57de9cd",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Preparando Tests.",
              "fullTitle": "Prueba: Preparando Tests.",
              "timedOut": false,
              "duration": 5025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n    I.wait(5);\n    console.log('Estamos listos para los tests');",
              "err": {},
              "uuid": "7dfb837f-0780-48ee-8aac-e112a5d8d096",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Flaky scenario",
              "fullTitle": "Prueba Flaky scenario",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recorder.errHandler((err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  if (test.throws) { // check that test should actually fail\n    try {\n      assertThrown(err, test.throws);\n      event.emit(event.test.passed, test);\n      event.emit(event.test.finished, test);\n      recorder.add(() => done());\n      return;\n    } catch (newErr) {\n      err = newErr;\n    }\n  }\n  event.emit(event.test.failed, test, err);\n  event.emit(event.test.finished, test);\n  recorder.add(() => done(err));\n});\nif (isAsyncFunction(testFn)) {\n  event.emit(event.test.started, test);\n  const catchError = e => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      recorder.session.start('teardown');\n      recorder.cleanAsyncErr();\n      event.emit(event.test.failed, test, err);\n      event.emit(event.test.finished, test);\n      recorder.add(() => done(err));\n    });\n  };\n  let injectedArguments;\n  try {\n    injectedArguments = getInjectedArguments(testFn, test);\n  } catch (e) {\n    catchError(e);\n    return;\n  }\n  testFn.call(test, injectedArguments).then(() => {\n    recorder.add('fire test.passed', () => {\n      event.emit(event.test.passed, test);\n      event.emit(event.test.finished, test);\n    });\n    recorder.add('finish test', () => done());\n    recorder.catch();\n  }).catch(catchError);\n  return;\n}\ntry {\n  event.emit(event.test.started, test);\n  testFn.call(test, getInjectedArguments(testFn, test));\n} catch (err) {\n  recorder.throw(err);\n} finally {\n  recorder.add('fire test.passed', () => {\n    event.emit(event.test.passed, test);\n    event.emit(event.test.finished, test);\n  });\n  recorder.add('finish test', () => done());\n  recorder.catch();\n}",
              "err": {},
              "uuid": "b0025a51-fcbd-467d-bde4-3d3e275b287c",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing start ",
              "fullTitle": "Prueba: Testing start ",
              "timedOut": false,
              "duration": 949,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n    I.amOnPage(DOMAIN_URL);\n    I.see('Palabra');\n    //I.fillField('input', \"Test\");\n   // I.click('//button[text()=\"Enviar al Backend\"]');\n    // I.click('button.*');\n    //I.wait(1);\n    //I.seeText('Palabra en espejo:');\n    //I.seeText('Tset');\n    //I.seeText('Pollo');",
              "err": {},
              "uuid": "52d4fa55-0909-44ba-8d2f-f5a9fe22d362",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing post ",
              "fullTitle": "Prueba: Testing post ",
              "timedOut": false,
              "duration": 1123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n  I.amOnPage(DOMAIN_URL);\n  I.fillField('#myinput', \"Test\")\n  //I.fillField('input', \"Test\");\n // I.click('//button[text()=\"Enviar al Backend\"]');\n  // I.click('button.*');\n  //I.wait(1);\n  //I.seeText('Palabra en espejo:');\n  //I.seeText('Tset');\n  //I.seeText('Pollo');",
              "err": {},
              "uuid": "1026f0cd-c38c-4012-9ea4-bbd99744d331",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing total2 ",
              "fullTitle": "Prueba: Testing total2 ",
              "timedOut": false,
              "duration": 2303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n  I.amOnPage(DOMAIN_URL);\n  I.fillField('#myinput', \"Test\")\n  I.click('#myboton');\n  I.wait(1);\n  I.see('tseT');",
              "err": {},
              "uuid": "c8cc4c9c-55bd-49ac-852e-c816d6b29e62",
              "parentUUID": "f4a57bee-a49e-4735-b3f3-ff67e794d767",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7dfb837f-0780-48ee-8aac-e112a5d8d096",
            "b0025a51-fcbd-467d-bde4-3d3e275b287c",
            "52d4fa55-0909-44ba-8d2f-f5a9fe22d362",
            "1026f0cd-c38c-4012-9ea4-bbd99744d331",
            "c8cc4c9c-55bd-49ac-852e-c816d6b29e62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./output",
        "reportFilename": "mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}